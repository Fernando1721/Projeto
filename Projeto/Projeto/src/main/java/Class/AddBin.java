/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Class;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

/**
 *
 * @author Miranda
 */
public class AddBin extends javax.swing.JFrame {

    /**
     * Creates new form AddBin
     */
    public AddBin() {
        initComponents();
        
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cboLixeira = new javax.swing.JComboBox<>();
        txtIdLixeira = new javax.swing.JTextField();
        txtCorLixeira = new javax.swing.JTextField();
        Pesquisar = new javax.swing.JButton();
        btnAdicionarLixeira = new javax.swing.JButton();
        btnAtualizarLixeira = new javax.swing.JButton();
        btnExcluirLixo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Id Lixeira");

        jLabel2.setText("Tipo De Lixeira");

        jLabel3.setText("Cor");

        cboLixeira.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione:", "Plastico", "Vidro", "Papel", "Metal", "Organico" }));
        cboLixeira.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboLixeiraActionPerformed(evt);
            }
        });

        txtCorLixeira.setEditable(false);

        Pesquisar.setText("Pesquisar");
        Pesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PesquisarActionPerformed(evt);
            }
        });

        btnAdicionarLixeira.setText("Adicionar");
        btnAdicionarLixeira.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarLixeiraActionPerformed(evt);
            }
        });

        btnAtualizarLixeira.setText("Atualizar");
        btnAtualizarLixeira.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarLixeiraActionPerformed(evt);
            }
        });

        btnExcluirLixo.setText("Excluir");
        btnExcluirLixo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirLixoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAdicionarLixeira)
                        .addGap(55, 55, 55)
                        .addComponent(btnAtualizarLixeira)
                        .addGap(48, 48, 48)
                        .addComponent(btnExcluirLixo))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtIdLixeira)
                            .addComponent(cboLixeira, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtCorLixeira))
                        .addGap(42, 42, 42)
                        .addComponent(Pesquisar)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtIdLixeira, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Pesquisar))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cboLixeira, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtCorLixeira, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdicionarLixeira)
                    .addComponent(btnAtualizarLixeira)
                    .addComponent(btnExcluirLixo))
                .addGap(32, 32, 32))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAdicionarLixeiraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarLixeiraActionPerformed
        // TODO add your handling code here:
        adicionarLixeira();
    }//GEN-LAST:event_btnAdicionarLixeiraActionPerformed

    private void cboLixeiraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboLixeiraActionPerformed
        // TODO add your handling code here:
         if(cboLixeira.getSelectedItem().equals("Plastico")){
        txtCorLixeira.setText("Vermelho");
    }else if(cboLixeira.getSelectedItem().equals("Vidro")){
        txtCorLixeira.setText("Verde");
    }else if(cboLixeira.getSelectedItem().equals("Papel")){
        txtCorLixeira.setText("Azul");
    }else if(cboLixeira.getSelectedItem().equals("Metal")){
        txtCorLixeira.setText("Amarelo");
    }else if(cboLixeira.getSelectedItem().equals("Organico")){
        txtCorLixeira.setText("Marrom");
    }else{
             System.out.println("Falha!");
    }
            
    }//GEN-LAST:event_cboLixeiraActionPerformed

    private void PesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PesquisarActionPerformed
        // TODO add your handling code here:
        pesquisarLixo();
    }//GEN-LAST:event_PesquisarActionPerformed

    private void btnAtualizarLixeiraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarLixeiraActionPerformed
        // TODO add your handling code here:
        atualizarLixeira();
    }//GEN-LAST:event_btnAtualizarLixeiraActionPerformed

    private void btnExcluirLixoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirLixoActionPerformed
        // TODO add your handling code here:
        excluirLixeira();
    }//GEN-LAST:event_btnExcluirLixoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddBin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddBin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddBin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddBin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddBin().setVisible(true);
            }
        });
    }
    
    DAO dao =  new DAO();
    
    
    private void pesquisarLixo() {
		if (txtIdLixeira.getText().isEmpty()) {
			JOptionPane.showMessageDialog(null, "Digite o Id da lixeira");
			txtIdLixeira.requestFocus();
		} else {
			// lógica principal
			// query principal ( Instrução SQL)
			String read = "select * from lixeira where idlixeira = ?";
			// tratar excessões sempre que lidar com o banco
			try {
				// estabelecer a conexão
				Connection con = dao.conectar();
				// Preparar a execução da Query
				PreparedStatement pst = con.prepareStatement(read);
				// Setar o argumento (id)
				// Substituir o ? pelo conteúdo da caixa de texto
				pst.setString(1, txtIdLixeira.getText());
				// Executar a query e exibir o resultado no formulário
				ResultSet rs = pst.executeQuery();
				// Validação (existência de clientes)
				// rs.next() -> existência de clientes
				//limparCampos();
				if (rs.next()) {
					// preencher(setar) os campos do formulario
					txtIdLixeira.setText(rs.getString(1));
                                        cboLixeira.setSelectedItem(rs.getString(2));
					txtCorLixeira.setText(rs.getString(3));
				} else {
					JOptionPane.showMessageDialog(null, "Lixeira não cadastrada");
				}
				con.close();
			} catch (Exception e) {
				System.out.println(e);
			}
		}
	}
    
    
    
    
    
     private void adicionarLixeira() {

		if (txtIdLixeira.getText().isEmpty()) {
			JOptionPane.showMessageDialog(null, "Informe o Id do lixo");
			txtIdLixeira.requestFocus();
		} else if (cboLixeira.getSelectedItem().equals("")) {
			JOptionPane.showMessageDialog(null, "Informe o tipo de lixo");
			cboLixeira.requestFocus();
                }else {
			// lógica principal
			String create = "insert into lixeira(idlixeira, tipolixeira, cor) values (?,?,?)";
			try {
				// Estabelecer a conexão
				Connection con = dao.conectar();
				// Preparar a execução da Query
				PreparedStatement pst = con.prepareStatement(create);
				// Substituir o ? pelo conteúdo da caixa de texto
				pst.setString(1, txtIdLixeira.getText());
				pst.setString(2, cboLixeira.getSelectedItem().toString());
				pst.setString(3, txtCorLixeira.getText());
				// Executar a query e inserir o cliente no banco
				pst.executeUpdate();
				// confirmação
				JOptionPane.showMessageDialog(null, "Lixeira adicionado com sucesso");
				// Encerrar a conexão
				con.close();
			} catch (Exception e) {
				System.out.println(e);
			}
		}
	}
     
     private void atualizarLixeira() {

		if (txtIdLixeira.getText().isEmpty()) {
			JOptionPane.showMessageDialog(null, "Informe o Id do lixeira");
			txtIdLixeira.requestFocus();
		} else if (cboLixeira.getSelectedItem().equals("")) {
			JOptionPane.showMessageDialog(null, "Informe o tipo de lixeira");
			cboLixeira.requestFocus();
		} else {
			// lógica principal
			String update = "update lixeira set tipolixeira=?, cor=?";
			try {
				// Estabelecer a conexão
				Connection con = dao.conectar();
				// Preparar a execução da Query
				PreparedStatement pst = con.prepareStatement(update);
				// Substituir o ? pelo conteúdo da caixa de texto
				
				pst.setString(1, cboLixeira.getSelectedItem().toString());
				pst.setString(2, txtCorLixeira.getText());
				// Executar a query e inserir o cliente no banco
				pst.executeUpdate();
				// confirmação
				JOptionPane.showMessageDialog(null, "Lixeira atualizado com sucesso");
				// Encerrar a conexão
				con.close();
			} catch (Exception e) {
				System.out.println(e);
			}
		}
	}
     
     private void excluirLixeira() {
		// validação (confirmação da exclusão)
		int confirma = JOptionPane.showConfirmDialog(null, "Confirma a exclusão da Lixeira?", "Atenção!",
				JOptionPane.YES_NO_OPTION);
		if (confirma == JOptionPane.YES_OPTION) {
			String delete = "delete from lixeira where idlixeira=?";
			try {
				// Estabelecer a conexão
				Connection con = dao.conectar();
				// Preparar a execução da Query
				PreparedStatement pst = con.prepareStatement(delete);
				// Substituir o ? pelo conteúdo da caixa de texto
				pst.setString(1, txtIdLixeira.getText());
				// Executar a query e excluir o cliente do banco
				pst.executeUpdate();
				// confirmação
				
				JOptionPane.showMessageDialog(null, "Lixeira excluido com sucesso");
				// Encerrar a conexão
				con.close();
			} catch (Exception e) {
				System.out.println(e);
			}
		}
	}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Pesquisar;
    private javax.swing.JButton btnAdicionarLixeira;
    private javax.swing.JButton btnAtualizarLixeira;
    private javax.swing.JButton btnExcluirLixo;
    private javax.swing.JComboBox<String> cboLixeira;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField txtCorLixeira;
    private javax.swing.JTextField txtIdLixeira;
    // End of variables declaration//GEN-END:variables
}
